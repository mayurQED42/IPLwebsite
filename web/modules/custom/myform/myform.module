<?php
use Drupal\node\NodeInterface;
use Drupal\Core\Entity\EntityInterface;
use Drupal\node\Entity\Node; 
use Drupal\user\Entity\User;

/**
 * Implements hook_ENTITY_TYPE_insert() for node entities.
 *
 * This tests saving a node on node insert.
 *
 * @see \Drupal\node\Tests\NodeSaveTest::testNodeSaveOnInsert()
 */
function myform_node_insert(NodeInterface $node) {
  // Set the node title to the node ID and save.
  if ($node->getType() == 'page') {
    $t=$node->getTitle();
    $t = preg_replace('/[^A-Za-z0-9\ ]/', '', $t);
    $t = preg_replace('/^\s+|\s+$|\s+(?=\s)/', '', $t);
    $t = str_replace(' ', '_', $t);
    $t = strtolower($t);
    $node->set('field_site', $t)->save();
  }
}

function myform_entity_presave(EntityInterface $entity){
    if($entity->bundle() == 'user'){
        // \Drupal::logger('myform')->notice('user name: ' . $entity->label());
        // \Drupal::logger('myform')->notice('id: ' . $entity->id());
        // \Drupal::logger('myform')->notice('type: ' . $entity->bundle());
        $user = User::load($entity->id());
        $query = \Drupal::entityQuery('node')->condition('uid', $user->id());
        $nids = $query->execute();
        $nodes = Node::loadMultiple($nids);
        foreach($nodes as $nod){
            $old_title = $nod->title->value;
            \Drupal::logger('myform')->notice('title: ' . $old_title);
        }
    }
}

// function myform_form_alter(&$form, &$form_state, $form_id){
//     if($form_id == 'node_page_edit_form')
//     {
//         if(isset($form_state['field_site']['args'][1])){
//             //do some stuff with this
//             \Drupal::logger('my_module1')->notice('setting value');
//         }
//     }
// }

// $form['dob'] = array (
//     '#type' => 'date',
//     '#title' => $this->t('DOB'),
//     '#required' => TRUE,
//   );